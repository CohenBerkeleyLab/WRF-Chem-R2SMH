6,8d5
<                gd_cloud, gd_cloud2,raincv_a,raincv_b,                               &
<                gd_cloud_a, gd_cloud2_a,                              &
<                gd_cloud_b, gd_cloud2_b,                              &
12a10,17
>                extaerlw1,extaerlw2,extaerlw3,extaerlw4,              &
>                extaerlw5,extaerlw6,extaerlw7,extaerlw8,              &
>                extaerlw9,extaerlw10,extaerlw11,extaerlw12,           &
>                extaerlw13,extaerlw14,extaerlw15,extaerlw16,          &
>                tauaerlw1,tauaerlw2,tauaerlw3,tauaerlw4,              &
>                tauaerlw5,tauaerlw6,tauaerlw7,tauaerlw8,              &
>                tauaerlw9,tauaerlw10,tauaerlw11,tauaerlw12,           &
>                tauaerlw13,tauaerlw14,tauaerlw15,tauaerlw16,          &
17c22
<                chem_in_opt, kemit,                                   &
---
>                chem_in_opt, kemit, num_vert_mix,                     &
27a33
>    USE module_mozcart_wetscav, only : wetscav_mozcart_init
28a35
>    USE module_aerosols_soa_vbs, only: aerosols_soa_vbs_init
43a51,57
>    USE module_upper_bc_driver, only: upper_bc_init
>    USE module_tropopause,      only: tropopause_init
>    USE module_cam_mam_init, only: cam_mam_init
>    USE module_cam_mam_initmixrats, only: cam_mam_initmixrats
> 
>    USE module_cam_mam_wetscav, only:wetscav_cam_mam_driver_init
>    USE module_cam_support, only: numgas_mam, gas_pcnst_modal_aero,gas_pcnst_modal_aero_pos !BSINGH - Fix for non-MAM simulations
48a63
>    INTEGER,      INTENT(INOUT) :: num_vert_mix
63,65c78,85
<                                gd_cloud, gd_cloud2,                  &
<                                gd_cloud_a, gd_cloud2_a,              &
<                                gd_cloud_b, gd_cloud2_b,              &
---
>                                extaerlw1,extaerlw2,extaerlw3,extaerlw4,      &
>                                extaerlw5,extaerlw6,extaerlw7,extaerlw8,      &
>                                extaerlw9,extaerlw10,extaerlw11,extaerlw12,   &
>                                extaerlw13,extaerlw14,extaerlw15,extaerlw16,  &
>                                tauaerlw1,tauaerlw2,tauaerlw3,tauaerlw4,      &
>                                tauaerlw5,tauaerlw6,tauaerlw7,tauaerlw8,      &
>                                tauaerlw9,tauaerlw10,tauaerlw11,tauaerlw12,   &
>                                tauaerlw13,tauaerlw14,tauaerlw15,tauaerlw16,  &
67a88
> 
88c109
<                                ttday,tcosz,xlat,xlong,raincv_a,raincv_b
---
>                                ttday,tcosz,xlat,xlong
92c113
<    TYPE(domain) , TARGET,        INTENT (in) ::     grid
---
>    TYPE(domain) ,             INTENT (inout) ::     grid
101a123
> #include "version_decl"
104a127
>    program_name = "*             PROGRAM:WRF/CHEM " // TRIM(release_version) // " MODEL"
107c130
< call wrf_message("*             PROGRAM: WRF/CHEM VERSION 3.1.1                       *")
---
> call wrf_message(program_name)
133a157,160
>      CASE (CRIMECH_KPP, CRI_MOSAIC_8BIN_AQ_KPP, CRI_MOSAIC_4BIN_AQ_KPP)
>        CALL wrf_debug(15,'calling crimech driver from chem_driver')
>        call wrf_message("WARNING: CRIMECH chemistry option is highly experimental and not recommended for use.")
> !       call wrf_error_fatal("ERROR: experimental option selected, please contact G.MCFIGGANS for assistance")
141a169,183
>      CASE (SAPRC99_KPP )
>        CALL wrf_debug(15,'calling SAPRC99 from chem_driver')
>        call wrf_message("WARNING: SAPRC99 chemistry option is highly experimental and not recommended for use.")
>      CASE (SAPRC99_MOSAIC_4BIN_VBS2_KPP )
>        CALL wrf_debug(15,'calling SAPRC99_MOSAIC_4BIN_VBS2_4BIN from chem_driver')
>        call wrf_message("WARNING: SAPRC99_MOSAIC_4BIN_VBS2_4BIN chemistry option is highly experimental and not recommended for use.")
> !jdf   call wrf_error_fatal("WARNING: SAPRC99_MOSAIC_4BIN_VBS2_4BIN chemistry option is useable but does not fully pass regtesting. It is recommended that you contact Jerome.Fast@pnl.gov for information regarding this option.")
>      CASE (CBMZ_MOSAIC_4BIN_VBS2_KPP )
>        CALL wrf_debug(15,'calling CBMZ_MOSAIC_4BIN_VBS2_4BIN from chem_driver')
>        call wrf_message("WARNING: CBMZ_MOSAIC_4BIN_VBS2_4BIN chemistry option is highly experimental and not recommended for use.")
> !jdf   call wrf_error_fatal("WARNING: CBMZ_MOSAIC_4BIN_VBS2_4BIN chemistry option is useable but does not fully pass regtesting. It is recommended that you contact Jerome.Fast@pnl.gov for information regarding this option.")
>      CASE (MOZART_MOSAIC_4BIN_VBS0_KPP )
>        CALL wrf_debug(15,'calling MOZART_MOSAIC_4BIN_VBS0_KPP from chem_driver')
>        call wrf_message("WARNING: MOZART_MOSAIC_4BIN_VBS0_KPP chemistry option is highly experimental and not recommended for use.")
>  !!      call wrf_error_fatal("WARNING: MOZART_MOSAIC_4BIN_VBS0_KPP chemistry option is useable but does not fully pass regtestint.????")
147c189
<        CALL wrf_debug(15,'calling RACM/MADE/SORGAM from chem_driver')
---
>        CALL wrf_debug(15,'calling RACM/MADE/SORGAM with AQ chemistry from chem_driver')
149a192,225
>      CASE (RADM2SORG_AQCHEM )
>        numgas_mam = numgas
>        CALL wrf_debug(15,'calling RADM2/MADE/SORGAM with AQCHEM chemistry from chem_driver')
>        call wrf_message("WARNING: RADM2SORG_AQCHEM chemistry option is experimental and not yet fully tested.")
>        call wrf_message("         We recommend contacting wrfchemhelp for assistance.")
>      CASE (RACMSORG_AQCHEM_KPP )
>        numgas_mam = numgas
>        CALL wrf_debug(15,'calling RACM/MADE/SORGAM with AQCHEM chemistry from chem_driver')
>        call wrf_message("WARNING: RACMSORG_AQCHEM_KPP chemistry option is highly experimental and not recommended for use.")
> !      call wrf_error_fatal("ERROR: experimental option selected, please contact wrfchemhelp for assistance")
>      CASE (RACM_ESRLSORG_AQCHEM_KPP )
>        numgas_mam = numgas
>        CALL wrf_debug(15,'calling RACM/MADE/SORGAM with AQCHEM chemistry from chem_driver')
>        call wrf_message("WARNING: RACM_ESRLSORG_AQCHEM_KPP chemistry option is highly experimental and not recommended for use.")
> !      call wrf_error_fatal("ERROR: experimental option selected, please contact wrfchemhelp for assistance")
>      CASE (CO2_TRACER, GHG_TRACER )
>        call wrf_message("WARNING: Users interested in the GHG options should check the comments/references in header of module_ghg_fluxes")
>      CASE (CBMZ_CAM_MAM3_NOAQ)
>         numgas_mam = numgas
>         CALL wrf_debug(15,'calling CBMZ_CAM_MAM3_NOAQ chemistry from chem_driver')
>      CASE (CBMZ_CAM_MAM3_AQ)
>         numgas_mam = numgas
>         CALL wrf_debug(15,'calling CBMZ_CAM_MAM3_AQ with AQCHEM chemistry from chem_driver')
>      CASE (CBMZ_CAM_MAM7_NOAQ)
>         numgas_mam = numgas
>         CALL wrf_debug(15,'calling CBMZ_CAM_MAM7_NOAQ chemistry from chem_driver')
>         call wrf_message("WARNING: CBMZ_CAM_MAM7_NOAQ  chemistry option is highly experimental and not recommended for use.")
>         call wrf_error_fatal("ERROR: It is recommended that you contact phil.rasch at pnnl.gov for information regarding this option")
>      CASE (CBMZ_CAM_MAM7_AQ)
>         numgas_mam = numgas
>         CALL wrf_debug(15,'calling CBMZ_CAM_MAM7_AQ with AQCHEM chemistry from chem_driver')
>         call wrf_message("WARNING: CBMZ_CAM_MAM7_AQ  chemistry option is highly experimental and not recommended for use.")
>         call wrf_error_fatal("ERROR: It is recommended that you contact phil.rasch at pnnl.gov for information regarding this option")
> 
160c236
<    if ( config_flags%biomass_burn_opt == 1 ) then
---
>    if ( config_flags%biomass_burn_opt > 0 .or. config_flags%biomass_burn_opt < 4 ) then
163c239,246
<    if( config_flags%chem_opt == MOZCART_KPP ) then
---
> 
>    if ( config_flags%biomass_burn_opt == 5 ) then
>        CALL wrf_debug(15,'calling biomass burning for GHGs')
>    endif
> 
>    if( config_flags%chem_opt == MOZCART_KPP .or. &
>        config_flags%chem_opt == MOZART_KPP .or. &
>        config_flags%chem_opt == MOZART_MOSAIC_4BIN_VBS0_KPP ) then
172,177c255,278
<       if ( config_flags%chem_opt >= 13 .OR. config_flags%chem_opt <= 8) then
<         call wrf_error_fatal("ERROR: wet scavaging option requires chem_opt = 9 through 12 to function.")
<       endif
<       if ( config_flags%mp_physics /= 2 ) then
<         call wrf_error_fatal("ERROR: wet scavaging option requires mp_phys = 2 (Lin et al.) to function.")
<       endif
---
>      if( config_flags%chem_opt /= MOZART_KPP .and. &
>          config_flags%chem_opt /= MOZCART_KPP .and. &
>          config_flags%chem_opt /= MOZART_MOSAIC_4BIN_VBS0_KPP ) then
>        if(  ( config_flags%chem_opt >= 8 .AND. config_flags%chem_opt <= 13) .OR.  &
>             ( config_flags%chem_opt >= 31 .AND. config_flags%chem_opt <= 36) .OR. &
>             ( config_flags%chem_opt >= 41 .AND. config_flags%chem_opt <= 43) .OR. &
>             ( config_flags%chem_opt == 503 .OR. config_flags%chem_opt == 504) .OR. &
>             ( config_flags%chem_opt == 601 .OR. config_flags%chem_opt == 611)  ) then
>          call wrf_debug( 15, 'Chemics_init: Wet scavenging turned on' )
>        else
>          call wrf_error_fatal("ERROR: wet scavenging option requires chem_opt = 8 through 13 or 31 to 36 or 41 to 42 or 503 or 504 or 601 or 611 to function.")
>        endif
>        if ( config_flags%mp_physics /= 2 .and. config_flags%mp_physics /= 10 .and. config_flags%mp_physics /= 11) then
>          call wrf_error_fatal("ERROR: wet scavenging option requires mp_phys = 2 (Lin et al.) or 10 (Morrison) or 11 (CAMMGMP) to function.")
>        endif
>      elseif( id == 1 ) then
>        if ( config_flags%mp_physics /= 8 ) then
>          call wrf_error_fatal("ERROR: wet scavenging option for MOZART,MOZCART requires mp_phys = 8 (Thompson) to function.")
>        else
>          write(message_txt,*) 'chem_init: calling wetscav_mozcart_init for domain ',id
>          call wrf_message( trim(message_txt) )
>          call wetscav_mozcart_init( id, numgas, config_flags )
>        endif
>      endif
181,182c282,289
<       if ( config_flags%chem_opt >= 13 .OR. config_flags%chem_opt <= 8) then
<         call wrf_error_fatal("ERROR:  cloud chemistry option requires chem_opt = 9 through 12 to function.")
---
>       if(  ( config_flags%chem_opt >= 8 .AND. config_flags%chem_opt <= 13)    .OR. &
>            ( config_flags%chem_opt >= 31 .AND. config_flags%chem_opt <= 36)   .OR. &
>            ( config_flags%chem_opt >= 501 .AND. config_flags%chem_opt <= 504) .OR. &
>            ( config_flags%chem_opt >= 41 .AND. config_flags%chem_opt <= 43)  .OR. &
>            ( config_flags%chem_opt >= 601 .AND. config_flags%chem_opt <= 611) ) then
>            call wrf_debug( 15, 'Chemics_init: Cloud chemistry turned on' )
>       else
>         call wrf_error_fatal("ERROR: cloud chemistry option requires chem_opt = 8 through 13 or 31 to 36 or 41 to 43 to function.")
184,185c291,292
<       if ( config_flags%mp_physics /= 2 ) then
<         call wrf_error_fatal("ERROR: cloud chemistry option requires mp_phys = 2 (Lin et al.) to function.")
---
>       if ( config_flags%mp_physics /= 2 .and. config_flags%mp_physics /= 10 .and. config_flags%mp_physics /= 11 ) then
>         call wrf_error_fatal("ERROR: cloud chemistry option requires mp_phys = 2 (Lin et al.) or 10 (Morrison) or 11 (CAMMGMP)to function.")
188a296,312
>    if ( config_flags%cu_physics == 5 .OR. config_flags%cu_physics == 3) then
>    if ( config_flags%cu_diag == 0) then
>          call wrf_message(" No time averaged variables. Time averaged chem variables requires cu_diag = 1")
>    endif
>    endif
> 
>    if ( config_flags%cu_diag == 1) then
>    if ( config_flags%cu_physics /= 3 .AND. config_flags%cu_physics /= 5) then
>          call wrf_error_fatal(" Time averaged variables (cu_diag = 1) requires cu_physics = 3 or 5")
>    endif
>    endif
> 
>    if ( config_flags%chem_opt /= 0 .AND. &
>       ( config_flags%chem_conv_tr == 1 .and. config_flags%cu_diag == 0) ) then
>          call wrf_error_fatal("ERROR: chem_conv_tr=1 requires cu_diag=1")
>    endif
> 
193a318,349
>     IF ( config_flags%aer_ra_feedback .EQ. 1   .AND.   &
>         ( config_flags%chem_opt == RADM2 .or. &
>           config_flags%chem_opt == CBMZ .or. &
>           config_flags%chem_opt == CBMZ_BB .or. &
>           config_flags%chem_opt == CO2_TRACER .or. &
>           config_flags%chem_opt == RADM2_KPP .or. &
>           config_flags%chem_opt == RACM_MIM_KPP .or. &
>           config_flags%chem_opt == RACM_KPP .or. &
>           config_flags%chem_opt == CBM4_KPP .or. &
>           config_flags%chem_opt == SAPRC99_KPP  .or. &
>           config_flags%chem_opt == NMHC9_KPP  ) ) then
>         call wrf_error_fatal(" ERROR: CHEM_INIT: MUST HAVE AEROSOLS TO INCLUDE AEROSOL RADIATION FEEDBACK. SET AER_RA_FEEDBACK = 0 ")
>     ENDIF
> 
>     if ( config_flags%n2o5_hetchem == 1 )then 
>         if( (config_flags%chem_opt >= 7   .AND. config_flags%chem_opt <= 10)  .OR. &
>             (config_flags%chem_opt >= 31  .AND. config_flags%chem_opt <= 34)  .OR. &
>              config_flags%chem_opt == 170 .OR.  config_flags%chem_opt == 198  .OR. &
>              config_flags%chem_opt == 199 .OR.  config_flags%chem_opt == 201  .OR. &
>              config_flags%chem_opt == 601 .OR.  config_flags%chem_opt == 611 ) then
>             call wrf_debug( 15, 'using N2O5 heterogeneous chemistry without Cl- pathway')
>         else
>             call wrf_error_fatal("ERROR: N2O5 heterogenous chemistry (without Cl- pathway) must be run with MOSAIC aerosol")
>         endif
>     elseif ( config_flags%n2o5_hetchem == 2 ) then
>         if( config_flags%chem_opt == 601 .OR. config_flags%chem_opt == 611 ) then
>             call wrf_debug( 15, 'using full N2O5 heterogeneous chemistry')
>         else
>             call wrf_error_fatal("ERROR: full N2O5 heterogenous chemistry must be run with MOSAIC aerosol coupled with gas-phase scheme which deals with ClNO2")
>         endif
>     endif
> 
199,200c355,367
<     IF (mminlu_loc .NE. 'USGS') THEN
<       call wrf_error_fatal(" ERROR: CHEM_INIT: Chemistry routines function with USGS data. Need to change land use option. ")
---
> 
>     IF (trim(mminlu_loc) /= 'USGS' .and. trim(mminlu_loc) /= 'MODIFIED_IGBP_MODIS_NOAH' ) THEN
>       print*,mminlu_loc
>       message_txt = " ERROR: CHEM_INIT: Chemistry routines require USGS or MODIS_NOAH land use maps. Need to change land use option."
>       call wrf_error_fatal( trim(message_txt) )
>     ELSE
>       IF (trim(mminlu_loc) == 'USGS' .and. grid%num_land_cat <= 23 ) THEN
>         message_txt = " ERROR: CHEM_INIT: USGS land use map should have 24 or more catagories."
>         call wrf_error_fatal( trim(message_txt) )
>       ELSEIF (trim(mminlu_loc) == 'MODIFIED_IGBP_MODIS_NOAH' .and. grid%num_land_cat <= 19 ) THEN
>         message_txt = " ERROR: CHEM_INIT: MODIS_NOAH land use map should have 20 or more catagories."
>         call wrf_error_fatal( trim(message_txt) )
>       ENDIF
201a369
> !--
242a411,442
>                 extaerlw1(i,k,j) = 0.
>                 extaerlw2(i,k,j) = 0.
>                 extaerlw3(i,k,j) = 0.
>                 extaerlw4(i,k,j) = 0.
>                 extaerlw5(i,k,j) = 0.
>                 extaerlw6(i,k,j) = 0.
>                 extaerlw7(i,k,j) = 0.
>                 extaerlw8(i,k,j) = 0.
>                 extaerlw9(i,k,j) = 0.
>                 extaerlw10(i,k,j) = 0.
>                 extaerlw11(i,k,j) = 0.
>                 extaerlw12(i,k,j) = 0.
>                 extaerlw13(i,k,j) = 0.
>                 extaerlw14(i,k,j) = 0.
>                 extaerlw15(i,k,j) = 0.
>                 extaerlw16(i,k,j) = 0.
>                 tauaerlw1(i,k,j) = 0.
>                 tauaerlw2(i,k,j) = 0.
>                 tauaerlw3(i,k,j) = 0.
>                 tauaerlw4(i,k,j) = 0.
>                 tauaerlw5(i,k,j) = 0.
>                 tauaerlw6(i,k,j) = 0.
>                 tauaerlw7(i,k,j) = 0.
>                 tauaerlw8(i,k,j) = 0.
>                 tauaerlw9(i,k,j) = 0.
>                 tauaerlw10(i,k,j) = 0.
>                 tauaerlw11(i,k,j) = 0.
>                 tauaerlw12(i,k,j) = 0.
>                 tauaerlw13(i,k,j) = 0.
>                 tauaerlw14(i,k,j) = 0.
>                 tauaerlw15(i,k,j) = 0.
>                 tauaerlw16(i,k,j) = 0.
256,273d455
<     do j=jts,jte
<        do k=kts,kte
<           do i=its,ite
<              gd_cloud(i,k,j) = 0.
<              gd_cloud2(i,k,j) = 0.
<              gd_cloud_a(i,k,j) = 0.
<              gd_cloud2_a(i,k,j) = 0.
<              gd_cloud_b(i,k,j) = 0.
<              gd_cloud2_b(i,k,j) = 0.
<           end do
<        end do
<     end do
<     do j=jts,jte
<           do i=its,ite
<             raincv_a(i,j)=0.
<             raincv_b(i,j)=0.
<        end do
<     end do
274a457,471
> ! Read VPRM parameters and put them into wrfinput file
> !     for diagnostics purposes only!
> !write(6,*)'config_flags%chem_opt, CO2_TRACER', config_flags%chem_opt, CO2_TRACER
> 
> if  ( config_flags%chem_opt==CO2_TRACER .OR. config_flags%chem_opt==GHG_TRACER )   then
>      call VPRM_par_initialize ( grid%rad_vprm, grid%lambda_vprm, grid%alpha_vprm, grid%resp_vprm, config_flags )
>      call wrf_message("Warning: the VPRM parameters may need to be optimized depending on the season, year and region!")
>      call wrf_message("The parameters provided here should be used for testing purposes only!")
> end if
> ! Read parameters for the termite model and put them into wrfinput file
> if (config_flags%chem_opt .EQ. GHG_TRACER) then
>    CALL termite_initialize(grid%biomt_par,grid%emit_par,config_flags)
> end if
> !--------------------------------------------------------------------------------------------------------
> !
277a475,492
> ! Set the num_vert_mix variable if using ACM
>     num_vert_mix = 0
>     IF ( config_flags%bl_pbl_physics == ACMPBLSCHEME ) THEN
>          mix_select: SELECT CASE(config_flags%chem_opt)
>          CASE (RADM2SORG_AQ, RADM2SORG_AQCHEM, RACMSORG_AQ, RACMSORG_AQCHEM_KPP, CBMZ_MOSAIC_4BIN_AQ, CBMZ_MOSAIC_8BIN_AQ, CBMZSORG_AQ, &
>               CBMZ_MOSAIC_DMS_4BIN, CBMZ_MOSAIC_DMS_8BIN, CBMZ_MOSAIC_DMS_4BIN_AQ, CBMZ_MOSAIC_DMS_8BIN_AQ, &
>               CRI_MOSAIC_8BIN_AQ_KPP, CRI_MOSAIC_4BIN_AQ_KPP)
>             num_vert_mix = numgas
>          CASE DEFAULT
>             num_vert_mix = num_chem
>          END SELECT mix_select
>         if(num_vert_mix .gt. config_flags%ndepvel) then
>          write(message_txt,'(A30,2(I8,2x))') 'chem_init: num_vert_mix and ndepvel ',num_vert_mix,config_flags%ndepvel
>          call wrf_message( trim(message_txt) )
>         call wrf_error_fatal(" ERROR: CHEM_INIT: num_vert_mix > ndepvel ")
>         endif
>     ENDIF
> 
312a528
> 
314c530,531
<                         ide, jde, config_flags%chem_opt )
---
>                   ide, jde, config_flags,config_flags%num_land_cat,mminlu_loc )
> !---
341c558,560
<      CASE (GOCARTRACM_KPP,RACM_KPP,RACMPM_KPP,RACMSORG_KPP, RACM_MIM_KPP,RACM_ESRLSORG_KPP)
---
> !     CASE (GOCARTRACM_KPP,RACM_KPP,RACMPM_KPP,RACMSORG_KPP,R2SMH_KPP,RACM_MIM_KPP,RACM_ESRLSORG_KPP, &
>      CASE (GOCARTRACM_KPP,RACM_KPP,RACMPM_KPP,RACMSORG_KPP,RACM_MIM_KPP,RACM_ESRLSORG_KPP, &
>            RACMSORG_AQCHEM_KPP,RACM_ESRLSORG_AQCHEM_KPP,RACM_SOA_VBS_KPP)
346c565
<                    chem(i,k,j,p_co2)=370.
---
>                    chem(i,k,j,p_co2)=380.
360,396c579,581
<      CASE (R2S_KPP)
<         if(config_flags%chem_in_opt == 0 )then
<           do j=jts,jte
<              do k=kts,kte
<                 do i=its,ite
<                    chem(i,k,j,p_co2)=370.
<                    chem(i,k,j,p_ch4)=1.7
<                    chem(i,k,j,p_api)=chem(i,k,j,p_olt)
<                    chem(i,k,j,p_api)=epsilc
<                    chem(i,k,j,p_lim)=chem(i,k,j,p_api)
<                    chem(i,k,j,p_dien)=chem(i,k,j,p_api)
<                    chem(i,k,j,p_act)=chem(i,k,j,p_api)
<                    chem(i,k,j,p_bald)=chem(i,k,j,p_api)
<                    chem(i,k,j,p_ben)=chem(i,k,j,p_api)
<                    chem(i,k,j,p_dcb1)=chem(i,k,j,p_api)
<                    chem(i,k,j,p_dcb2)=chem(i,k,j,p_api)
<                    chem(i,k,j,p_dcb3)=chem(i,k,j,p_api)
<                    chem(i,k,j,p_eoh)=chem(i,k,j,p_api)
<                    chem(i,k,j,p_epx)=chem(i,k,j,p_api)
<                    chem(i,k,j,p_eteg)=chem(i,k,j,p_api)
<                    chem(i,k,j,p_ishp)=chem(i,k,j,p_api)
<                    chem(i,k,j,p_ison)=chem(i,k,j,p_api)
<                    chem(i,k,j,p_mahp)=chem(i,k,j,p_api)
<                    chem(i,k,j,p_mct)=chem(i,k,j,p_api)
<                    chem(i,k,j,p_moh)=chem(i,k,j,p_api)
<                    chem(i,k,j,p_nald)=chem(i,k,j,p_api)
<                    chem(i,k,j,p_per1)=chem(i,k,j,p_api)
<                    chem(i,k,j,p_per2)=chem(i,k,j,p_api)
<                    chem(i,k,j,p_phen)=chem(i,k,j,p_api)
<                    chem(i,k,j,p_roh)=chem(i,k,j,p_api)
<                    chem(i,k,j,p_uald)=chem(i,k,j,p_api)
<                    chem(i,k,j,p_xyo)=chem(i,k,j,p_api)
<                 enddo
<              enddo
<           enddo
<         endif
<      CASE (R2SMN_KPP)
---
> !Azimeh test ba backup file doublecheck shavad
> 
>        CASE (R2SMH_KPP)
451,452c636,637
<                    
<                enddo
---
>                    chem(i,k,j,p_honit)=chem(i,k,j,p_api)
>                     enddo
456c641,642
<        CASE (R2SMH_KPP)
---
> 
>      CASE (RADM2_KPP,RADM2SORG_KPP,GOCARTRADM2,GOCARTRADM2_KPP,SAPRC99_KPP)
461c647
<                    chem(i,k,j,p_co2)=370.
---
>                    chem(i,k,j,p_co2)=380.
463,512c649
<                    chem(i,k,j,p_api)=chem(i,k,j,p_olt)
<                    chem(i,k,j,p_api)=epsilc
<                    chem(i,k,j,p_lim)=chem(i,k,j,p_api)
<                    chem(i,k,j,p_dien)=chem(i,k,j,p_api)
<                    chem(i,k,j,p_act)=chem(i,k,j,p_api)
<                    chem(i,k,j,p_bald)=chem(i,k,j,p_api)
<                    chem(i,k,j,p_ben)=chem(i,k,j,p_api)
<                    chem(i,k,j,p_dcb1)=chem(i,k,j,p_api)
<                    chem(i,k,j,p_dcb2)=chem(i,k,j,p_api)
<                    chem(i,k,j,p_dcb3)=chem(i,k,j,p_api)
<                    chem(i,k,j,p_eoh)=chem(i,k,j,p_api)
<                    chem(i,k,j,p_epx)=chem(i,k,j,p_api)
<                    chem(i,k,j,p_eteg)=chem(i,k,j,p_api)
<                    chem(i,k,j,p_ishp)=chem(i,k,j,p_api)
<                    chem(i,k,j,p_ison)=chem(i,k,j,p_api)
<                    chem(i,k,j,p_mahp)=chem(i,k,j,p_api)
<                    chem(i,k,j,p_mct)=chem(i,k,j,p_api)
<                    chem(i,k,j,p_moh)=chem(i,k,j,p_api)
<                    chem(i,k,j,p_nald)=chem(i,k,j,p_api)
<                    chem(i,k,j,p_per1)=chem(i,k,j,p_api)
<                    chem(i,k,j,p_per2)=chem(i,k,j,p_api)
<                    chem(i,k,j,p_phen)=chem(i,k,j,p_api)
<                    chem(i,k,j,p_roh)=chem(i,k,j,p_api)
<                    chem(i,k,j,p_uald)=chem(i,k,j,p_api)
<                    chem(i,k,j,p_xyo)=chem(i,k,j,p_api)
<                    chem(i,k,j,p_glyc)=chem(i,k,j,p_api)
<                    chem(i,k,j,p_isopnd)=chem(i,k,j,p_api)
<                    chem(i,k,j,p_isopnb)=chem(i,k,j,p_api)
<                    chem(i,k,j,p_uhc)=chem(i,k,j,p_api)
<                    chem(i,k,j,p_hac)=chem(i,k,j,p_api)
<                    chem(i,k,j,p_macrn)=chem(i,k,j,p_api)
<                    chem(i,k,j,p_mvkn)=chem(i,k,j,p_api)
<                    chem(i,k,j,p_propnn)=chem(i,k,j,p_api)
<                    chem(i,k,j,p_vrp)=chem(i,k,j,p_api)
<                    chem(i,k,j,p_iepox)=chem(i,k,j,p_api)
<                    chem(i,k,j,p_iap)=chem(i,k,j,p_api)
<                    chem(i,k,j,p_dhmob)=chem(i,k,j,p_api)
<                    chem(i,k,j,p_moba)=chem(i,k,j,p_api)
<                    chem(i,k,j,p_ethln)=chem(i,k,j,p_api)
<                    chem(i,k,j,p_isnp)=chem(i,k,j,p_api)
<                    chem(i,k,j,p_pyac)=chem(i,k,j,p_api)
<                    chem(i,k,j,p_hpald)=chem(i,k,j,p_api)
<                    chem(i,k,j,p_imonit)=chem(i,k,j,p_api)
<                    chem(i,k,j,p_monit)=chem(i,k,j,p_api)
<                    chem(i,k,j,p_donit)=chem(i,k,j,p_api)
<                    chem(i,k,j,p_aonit)=chem(i,k,j,p_api)
<                    chem(i,k,j,p_tonit)=chem(i,k,j,p_api)
<                    chem(i,k,j,p_utonit)=chem(i,k,j,p_api)
<                    chem(i,k,j,p_honit)=chem(i,k,j,p_api)
<                     enddo
---
>                 enddo
516c653
<        CASE (R2SI_KPP)
---
>         CASE (CBMZ_BB_KPP)
521d657
<                    chem(i,k,j,p_co2)=370.
523,566c659
<                    chem(i,k,j,p_api)=chem(i,k,j,p_olt)
<                    chem(i,k,j,p_api)=epsilc
<                    chem(i,k,j,p_lim)=chem(i,k,j,p_api)
<                    chem(i,k,j,p_dien)=chem(i,k,j,p_api)
<                    chem(i,k,j,p_act)=chem(i,k,j,p_api)
<                    chem(i,k,j,p_bald)=chem(i,k,j,p_api)
<                    chem(i,k,j,p_ben)=chem(i,k,j,p_api)
<                    chem(i,k,j,p_dcb1)=chem(i,k,j,p_api)
<                    chem(i,k,j,p_dcb2)=chem(i,k,j,p_api)
<                    chem(i,k,j,p_dcb3)=chem(i,k,j,p_api)
<                    chem(i,k,j,p_eoh)=chem(i,k,j,p_api)
<                    chem(i,k,j,p_epx)=chem(i,k,j,p_api)
<                    chem(i,k,j,p_eteg)=chem(i,k,j,p_api)
<                    chem(i,k,j,p_ishp)=chem(i,k,j,p_api)
<                    chem(i,k,j,p_ison)=chem(i,k,j,p_api)
<                    chem(i,k,j,p_mahp)=chem(i,k,j,p_api)
<                    chem(i,k,j,p_mct)=chem(i,k,j,p_api)
<                    chem(i,k,j,p_moh)=chem(i,k,j,p_api)
<                    chem(i,k,j,p_nald)=chem(i,k,j,p_api)
<                    chem(i,k,j,p_per1)=chem(i,k,j,p_api)
<                    chem(i,k,j,p_per2)=chem(i,k,j,p_api)
<                    chem(i,k,j,p_phen)=chem(i,k,j,p_api)
<                    chem(i,k,j,p_roh)=chem(i,k,j,p_api)
<                    chem(i,k,j,p_uald)=chem(i,k,j,p_api)
<                    chem(i,k,j,p_xyo)=chem(i,k,j,p_api)
<                    chem(i,k,j,p_glyc)=chem(i,k,j,p_api)
<                    chem(i,k,j,p_isopnd)=chem(i,k,j,p_api)
<                    chem(i,k,j,p_isopnb)=chem(i,k,j,p_api)
<                    chem(i,k,j,p_uhc)=chem(i,k,j,p_api)
<                    chem(i,k,j,p_hac)=chem(i,k,j,p_api)
<                    chem(i,k,j,p_macrn)=chem(i,k,j,p_api)
<                    chem(i,k,j,p_mvkn)=chem(i,k,j,p_api)
<                    chem(i,k,j,p_propnn)=chem(i,k,j,p_api)
<                    chem(i,k,j,p_vrp)=chem(i,k,j,p_api)
<                    chem(i,k,j,p_iepox)=chem(i,k,j,p_api)
<                    chem(i,k,j,p_iap)=chem(i,k,j,p_api)
<                    chem(i,k,j,p_dhmob)=chem(i,k,j,p_api)
<                    chem(i,k,j,p_moba)=chem(i,k,j,p_api)
<                    chem(i,k,j,p_ethln)=chem(i,k,j,p_api)
<                    chem(i,k,j,p_isnp)=chem(i,k,j,p_api)
<                    chem(i,k,j,p_pyac)=chem(i,k,j,p_api)
<                    chem(i,k,j,p_hpald)=chem(i,k,j,p_api)
<                    chem(i,k,j,p_imonit)=chem(i,k,j,p_api)
<                enddo
---
>                 enddo
570c663,665
<      CASE (RADM2_KPP,RADM2SORG_KPP,GOCARTRADM2,GOCARTRADM2_KPP)
---
> 
> 
>         CASE (CBMZ_MOSAIC_KPP)
575d669
<                    chem(i,k,j,p_co2)=370.
576a671,716
>                    chem(i,k,j,p_aro1)=0.0
>                    chem(i,k,j,p_aro2)=0.0
>                    chem(i,k,j,p_alk1)=0.0
>                    chem(i,k,j,p_ole1)=0.0
>                    chem(i,k,j,p_api1)=0.0
>                    chem(i,k,j,p_api2)=0.0
>                    chem(i,k,j,p_lim1)=0.0
>                    chem(i,k,j,p_lim2)=0.0
>                    chem(i,k,j,p_api)=0.0
>                    chem(i,k,j,p_lim)=0.0
>                 enddo
>              enddo
>           enddo
>         endif 
> 
>         CASE (MOZART_MOSAIC_4BIN_VBS0_KPP)
>         if(config_flags%chem_in_opt == 0 )then
>                    grid%vbs_nbin=0
>           do j=jts,jte
>              do k=kts,kte
>                 do i=its,ite
>           !         chem(i,k,j,p_co2)=380.
>           !         chem(i,k,j,p_ch4)=1.7
>          if (p_ant1_c.gt.1)    chem(i,k,j,p_ant1_c)=0.0
>          if (p_ant2_c.gt.1)    chem(i,k,j,p_ant2_c)=0.0
>          if (p_ant3_c.gt.1)    chem(i,k,j,p_ant3_c)=0.0
>          if (p_ant4_c.gt.1)    chem(i,k,j,p_ant4_c)=0.0
>          if (p_ant1_o.gt.1)    chem(i,k,j,p_ant1_o)=0.0
>          if (p_ant2_o.gt.1)    chem(i,k,j,p_ant2_o)=0.0
>          if (p_ant3_o.gt.1)    chem(i,k,j,p_ant3_o)=0.0
>          if (p_ant4_o.gt.1)    chem(i,k,j,p_ant4_o)=0.0
>          if (p_biog1_c.gt.1)    chem(i,k,j,p_biog1_c)=0.0
>          if (p_biog2_c.gt.1)    chem(i,k,j,p_biog2_c)=0.0
>          if (p_biog3_c.gt.1)    chem(i,k,j,p_biog3_c)=0.0
>          if (p_biog4_c.gt.1)    chem(i,k,j,p_biog4_c)=0.0
>          if (p_biog1_o.gt.1)    chem(i,k,j,p_biog1_o)=0.0
>          if (p_biog2_o.gt.1)    chem(i,k,j,p_biog2_o)=0.0
>          if (p_biog3_o.gt.1)    chem(i,k,j,p_biog3_o)=0.0
>          if (p_biog4_o.gt.1)    chem(i,k,j,p_biog4_o)=0.0
>          if (p_smpa.gt.1)       chem(i,k,j,p_smpa)=0.0
>          if (p_smpbb.gt.1)       chem(i,k,j,p_smpbb)=0.0
> 
>          chem(i,k,j,p_voca)=0.0
>          chem(i,k,j,p_vocbb)=0.0
> 
> 
581c721,724
<         CASE (CBMZ_BB_KPP)
---
> 
> 
> 
>         CASE (CBMZ_MOSAIC_4BIN_VBS2_KPP,SAPRC99_MOSAIC_4BIN_VBS2_KPP)
582a726
>                    grid%vbs_nbin(1)=2
585a730
>                    chem(i,k,j,p_co2)=380.
586a732,818
>          if (p_pcg1_b_c.gt.1) chem(i,k,j,p_pcg1_b_c)=0.00
>          if (p_pcg2_b_c.gt.1) chem(i,k,j,p_pcg2_b_c)=0.00
>          if (p_pcg3_b_c.gt.1) chem(i,k,j,p_pcg3_b_c)=0.00
>          if (p_pcg4_b_c.gt.1) chem(i,k,j,p_pcg4_b_c)=0.00
>          if (p_pcg5_b_c.gt.1) chem(i,k,j,p_pcg5_b_c)=0.00
>          if (p_pcg6_b_c.gt.1) chem(i,k,j,p_pcg6_b_c)=0.00
>          if (p_pcg7_b_c.gt.1) chem(i,k,j,p_pcg7_b_c)=0.00
>          if (p_pcg8_b_c.gt.1) chem(i,k,j,p_pcg8_b_c)=0.00
>          if (p_pcg9_b_c.gt.1) chem(i,k,j,p_pcg9_b_c)=0.00
>          if (p_pcg1_b_o.gt.1) chem(i,k,j,p_pcg1_b_o)=0.00
>          if (p_pcg2_b_o.gt.1) chem(i,k,j,p_pcg2_b_o)=0.00
>          if (p_pcg3_b_o.gt.1) chem(i,k,j,p_pcg3_b_o)=0.00
>          if (p_pcg4_b_o.gt.1) chem(i,k,j,p_pcg4_b_o)=0.00
>          if (p_pcg5_b_o.gt.1) chem(i,k,j,p_pcg5_b_o)=0.00
>          if (p_pcg6_b_o.gt.1) chem(i,k,j,p_pcg6_b_o)=0.00
>          if (p_pcg7_b_o.gt.1) chem(i,k,j,p_pcg7_b_o)=0.00
>          if (p_pcg8_b_o.gt.1) chem(i,k,j,p_pcg8_b_o)=0.00
>          if (p_pcg9_b_o.gt.1) chem(i,k,j,p_pcg9_b_o)=0.00
>          if (p_opcg1_b_c.gt.1) chem(i,k,j,p_opcg1_b_c)=0.00
>          if (p_opcg2_b_c.gt.1) chem(i,k,j,p_opcg2_b_c)=0.00
>          if (p_opcg3_b_c.gt.1) chem(i,k,j,p_opcg3_b_c)=0.00
>          if (p_opcg4_b_c.gt.1) chem(i,k,j,p_opcg4_b_c)=0.00
>          if (p_opcg5_b_c.gt.1) chem(i,k,j,p_opcg5_b_c)=0.00
>          if (p_opcg6_b_c.gt.1) chem(i,k,j,p_opcg6_b_c)=0.00
>          if (p_opcg7_b_c.gt.1) chem(i,k,j,p_opcg7_b_c)=0.00
>          if (p_opcg8_b_c.gt.1) chem(i,k,j,p_opcg8_b_c)=0.00
>          if (p_opcg1_b_o.gt.1) chem(i,k,j,p_opcg1_b_o)=0.00
>          if (p_opcg2_b_o.gt.1) chem(i,k,j,p_opcg2_b_o)=0.00
>          if (p_opcg3_b_o.gt.1) chem(i,k,j,p_opcg3_b_o)=0.00
>          if (p_opcg4_b_o.gt.1) chem(i,k,j,p_opcg4_b_o)=0.00
>          if (p_opcg5_b_o.gt.1) chem(i,k,j,p_opcg5_b_o)=0.00
>          if (p_opcg6_b_o.gt.1) chem(i,k,j,p_opcg6_b_o)=0.00
>          if (p_opcg7_b_o.gt.1) chem(i,k,j,p_opcg7_b_o)=0.00
>          if (p_opcg8_b_o.gt.1) chem(i,k,j,p_opcg8_b_o)=0.00
>          if (p_pcg1_f_c.gt.1) chem(i,k,j,p_pcg1_f_c)=0.00
>          if (p_pcg2_f_c.gt.1) chem(i,k,j,p_pcg2_f_c)=0.00
>          if (p_pcg3_f_c.gt.1) chem(i,k,j,p_pcg3_f_c)=0.00
>          if (p_pcg4_f_c.gt.1) chem(i,k,j,p_pcg4_f_c)=0.00
>          if (p_pcg5_f_c.gt.1) chem(i,k,j,p_pcg5_f_c)=0.00
>          if (p_pcg6_f_c.gt.1) chem(i,k,j,p_pcg6_f_c)=0.00
>          if (p_pcg7_f_c.gt.1) chem(i,k,j,p_pcg7_f_c)=0.00
>          if (p_pcg8_f_c.gt.1) chem(i,k,j,p_pcg8_f_c)=0.00
>          if (p_pcg9_f_c.gt.1) chem(i,k,j,p_pcg9_f_c)=0.00
>          if (p_pcg1_f_o.gt.1) chem(i,k,j,p_pcg1_f_o)=0.00
>          if (p_pcg2_f_o.gt.1) chem(i,k,j,p_pcg2_f_o)=0.00
>          if (p_pcg3_f_o.gt.1) chem(i,k,j,p_pcg3_f_o)=0.00
>          if (p_pcg4_f_o.gt.1) chem(i,k,j,p_pcg4_f_o)=0.00
>          if (p_pcg5_f_o.gt.1) chem(i,k,j,p_pcg5_f_o)=0.00
>          if (p_pcg6_f_o.gt.1) chem(i,k,j,p_pcg6_f_o)=0.00
>          if (p_pcg7_f_o.gt.1) chem(i,k,j,p_pcg7_f_o)=0.00
>          if (p_pcg8_f_o.gt.1) chem(i,k,j,p_pcg8_f_o)=0.00
>          if (p_pcg9_f_o.gt.1) chem(i,k,j,p_pcg9_f_o)=0.00
>          if (p_opcg1_f_c.gt.1) chem(i,k,j,p_opcg1_f_c)=0.00
>          if (p_opcg2_f_c.gt.1) chem(i,k,j,p_opcg2_f_c)=0.00
>          if (p_opcg3_f_c.gt.1) chem(i,k,j,p_opcg3_f_c)=0.00
>          if (p_opcg4_f_c.gt.1) chem(i,k,j,p_opcg4_f_c)=0.00
>          if (p_opcg5_f_c.gt.1) chem(i,k,j,p_opcg5_f_c)=0.00
>          if (p_opcg6_f_c.gt.1) chem(i,k,j,p_opcg6_f_c)=0.00
>          if (p_opcg7_f_c.gt.1) chem(i,k,j,p_opcg7_f_c)=0.00
>          if (p_opcg8_f_c.gt.1) chem(i,k,j,p_opcg8_f_c)=0.00
>          if (p_opcg1_f_o.gt.1) chem(i,k,j,p_opcg1_f_o)=0.00
>          if (p_opcg2_f_o.gt.1) chem(i,k,j,p_opcg2_f_o)=0.00
>          if (p_opcg3_f_o.gt.1) chem(i,k,j,p_opcg3_f_o)=0.00
>          if (p_opcg4_f_o.gt.1) chem(i,k,j,p_opcg4_f_o)=0.00
>          if (p_opcg5_f_o.gt.1) chem(i,k,j,p_opcg5_f_o)=0.00
>          if (p_opcg6_f_o.gt.1) chem(i,k,j,p_opcg6_f_o)=0.00
>          if (p_opcg7_f_o.gt.1) chem(i,k,j,p_opcg7_f_o)=0.00
>          if (p_opcg8_f_o.gt.1) chem(i,k,j,p_opcg8_f_o)=0.00
>          if (p_ant1_c.gt.1)    chem(i,k,j,p_ant1_c)=0.0
>          if (p_ant2_c.gt.1)    chem(i,k,j,p_ant2_c)=0.0
>          if (p_ant3_c.gt.1)    chem(i,k,j,p_ant3_c)=0.0
>          if (p_ant4_c.gt.1)    chem(i,k,j,p_ant4_c)=0.0
>          if (p_ant1_o.gt.1)    chem(i,k,j,p_ant1_o)=0.0
>          if (p_ant2_o.gt.1)    chem(i,k,j,p_ant2_o)=0.0
>          if (p_ant3_o.gt.1)    chem(i,k,j,p_ant3_o)=0.0
>          if (p_ant4_o.gt.1)    chem(i,k,j,p_ant4_o)=0.0
>          if (p_biog1_c.gt.1)    chem(i,k,j,p_biog1_c)=0.0
>          if (p_biog2_c.gt.1)    chem(i,k,j,p_biog2_c)=0.0
>          if (p_biog3_c.gt.1)    chem(i,k,j,p_biog3_c)=0.0
>          if (p_biog4_c.gt.1)    chem(i,k,j,p_biog4_c)=0.0
>          if (p_biog1_o.gt.1)    chem(i,k,j,p_biog1_o)=0.0
>          if (p_biog2_o.gt.1)    chem(i,k,j,p_biog2_o)=0.0
>          if (p_biog3_o.gt.1)    chem(i,k,j,p_biog3_o)=0.0
>          if (p_biog4_o.gt.1)    chem(i,k,j,p_biog4_o)=0.0
> 
> 
> 
590a823,827
> 
> 
> 
> 
> 
592a830,888
> 
> !Azimeh
> !
> !!! Initialize some greenhouse gas species for 16th and 17th chemistry options:
> !!! CO2 mixing ratios for the background GHG tracers are set as a constant value.
> !!! Some spin-up is necessary to get spatial variability right!
> !!! Warning: initial values for CO2 components have to be subtracted from the output!
> !!! The purpose of this is to avoid negative values due to the biospheric uptake!
> !!! This subroutine is called at every initialization, however it's carried out if
> !!! restart=0 and chem_in_opt=0
> !ghg_block: IF (config_flags%gas_ic_opt==GAS_IC_GHG) THEN
> !   IF( (.not. config_flags%restart) .AND. config_flags%chem_in_opt==0 ) THEN
> !! CO2 tracers:
> !       do j=jts,jte
> !        do k=kts,kte
> !         do i=its,ite
> !            chem(i,k,j,p_co2_bck)=380.  ! background CO2 tracer
> !            chem(i,k,j,p_co2_bio)=380.  ! A user should subtract this from the output fields!
> !            chem(i,k,j,p_co2_oce)=380.   ! A user should subtract this from the output fields!
> !            chem(i,k,j,p_co2_ant)=380.   ! A user should subtract this from the output fields!
> !            chem(i,k,j,p_co2_tst)=380.   ! A user should subtract this from the output fields!
> !
> !            if (p_co2_bbu>1) chem(i,k,j,p_co2_bbu)=380.  ! A user should subtract this from the output fields!
> !
> !         enddo
> !        enddo
> !       enddo
> !
> !! CO tracers:
> !       do j=jts,jte
> !        do k=kts,kte
> !         do i=its,ite
> !            chem(i,k,j,p_co_bck)=0.1  ! background CO tracer
> !            chem(i,k,j,p_co_ant)=0.1  ! A user should subtract this from the output fields!
> !            if (p_co_tst>1) chem(i,k,j,p_co_tst)=0.1     ! A user should subtract this from the output fields!
> !            if (p_co_bbu>1) chem(i,k,j,p_co_bbu)=0.1     ! A user should subtract this from the output fields!
> !         enddo
> !        enddo
> !       enddo
> !
> !! CH4 tracers:
> !     IF (p_ch4_bck.gt.1) THEN
> !      do j=jts,jte
> !       do k=kts,kte
> !        do i=its,ite
> !           chem(i,k,j,p_ch4_bck)=1.77   ! background CH4 tracer
> !           chem(i,k,j,p_ch4_bio)=1.77   ! A user should subtract this from the output fields!
> !           chem(i,k,j,p_ch4_ant)=1.77   ! A user should subtract this from the output fields!
> !           chem(i,k,j,p_ch4_bbu)=1.77   ! A user should subtract this from the output fields!
> !           chem(i,k,j,p_ch4_tst)=1.77   ! A user should subtract this from the output fields!
> !        enddo
> !       enddo
> !      enddo
> !      ENDIF
> !
> !   ENDIF
> !ENDIF ghg_block
> !!Azimeh
> 
633a930,949
>      CASE (DUST)
>        if(config_flags%phot_opt .NE. 0 )then
>          call wrf_error_fatal("Dust only simple initialization, phot_opt  MUST BE ZERO")
> !        config_flags%phot_opt  = 0
>        endif
>        CALL wrf_debug(15,'call dust aerosols initialization')
>         ch_dust(:,:)=0.8D-9
>         if(config_flags%chem_in_opt == 0 )then
>         if( .NOT. config_flags%restart )then
>            do j=jts,jte
>               do k=kts,kte
>                  do i=its,ite
>                    do n=1,num_chem
>                      chem(i,k,j,n)=0.
>                    enddo
>                  enddo
>                enddo
>            enddo
>          endif
>          endif
687,688c1003,1004
<                  if(i.eq.19.and.j.eq.19)write(0,*)'in cheminit'
<                  if(i.eq.19.and.j.eq.19)write(0,*)TCOSZ(i,j),ttday(i,j),julday, gmtp, sza, cosszax,xlonn,rlat
---
> !                if(i.eq.19.and.j.eq.19)write(0,*)'in cheminit'
> !                if(i.eq.19.and.j.eq.19)write(0,*)TCOSZ(i,j),ttday(i,j),julday, gmtp, sza, cosszax,xlonn,rlat
693c1009
<         ch_dust(:,:) = 0.8e-9_8
---
>         ch_dust(:,:) = 0.8D-9
695,697c1011,1012
<      CASE (RADM2SORG, RADM2SORG_AQ, RACMSORG_AQ, RADM2SORG_KPP, &
<            RACMSORG_KPP,RACM_ESRLSORG_KPP, R2S_KPP, &
<            R2SI_KPP,R2SMH_KPP,R2SMN_KPP)
---
>      CASE (RADM2SORG, RADM2SORG_AQ, RADM2SORG_AQCHEM, RACMSORG_AQ, RACMSORG_AQCHEM_KPP, RACM_ESRLSORG_AQCHEM_KPP, RADM2SORG_KPP, &
>            RACMSORG_KPP, R2SMH_KPP, RACM_ESRLSORG_KPP, CBMZSORG, CBMZSORG_AQ)
721a1037,1039
> !
>     CASE (RACM_SOA_VBS_KPP)
>        CALL wrf_debug(15,'call MADE/SOA_VBS aerosols initialization')
723,724c1041,1091
< 
<      CASE (CBMZ_MOSAIC_4BIN, CBMZ_MOSAIC_8BIN, CBMZ_MOSAIC_4BIN_AQ, CBMZ_MOSAIC_8BIN_AQ)
---
>        call aerosols_soa_vbs_init(chem,convfac,z_at_w,                &
>                pm2_5_dry,pm2_5_water,pm2_5_dry_ec,                   &
>                chem_in_opt,config_flags%aer_ic_opt,is_aerosol,       &
>                ids,ide, jds,jde, kds,kde,                            &
>                ims,ime, jms,jme, kms,kme,                            &
>                its,ite, jts,jte, kts,kte, config_flags               )
> !...Convert aerosols to mixing ratio
>         if( .NOT. config_flags%restart ) then
>         if(config_flags%chem_in_opt == 0 .and. num_chem.gt.numgas)then
>         do l=numgas+1,num_chem
>            do j=jts,jte
>               do k=kts,kte
>                  kk = min(k,kde-1)
>                  do i=its,ite
>                     chem(i,k,j,l)=chem(i,kk,j,l)*alt(i,kk,j)
>                  enddo
>               enddo
>            enddo
>         enddo
>         endif
>         endif
>         chem(its:ite,kts:min(kte,kde-1),jts:jte,:)=max(chem(its:ite,kts:min(kte,kde-1),jts:jte,:),epsilc)
> !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
>      CASE ( CBMZ_CAM_MAM3_NOAQ, CBMZ_CAM_MAM3_AQ, CBMZ_CAM_MAM7_NOAQ, CBMZ_CAM_MAM7_AQ )
>        call wrf_debug(15,'call CAM_MODAL aerosols initialization')
>        call cam_mam_init(                                            &
>                id, numgas, config_flags,                             &
>                ids,ide, jds,jde, kds,kde,                            &
>                ims,ime, jms,jme, kms,kme,                            &
>                its,ite, jts,jte, kts,kte                             )
>        if(config_flags%chem_in_opt == 0 )then
>            if( .NOT. config_flags%restart ) &
>            call cam_mam_initmixrats(                                 &
>                id, numgas, config_flags,                             &
>                chem, convfac, alt, z_at_w, g,                        &
>                ids,ide, jds,jde, kds,kde,                            &
>                ims,ime, jms,jme, kms,kme,                            &
>                its,ite, jts,jte, kts,kte                             )
>        endif
>        if(config_flags%wetscav_onoff == 1 .and. .NOT. config_flags%restart ) then
>           if(config_flags%mp_physics == CAMMGMPSCHEME ) then
>              call wetscav_cam_mam_driver_init(ids,ide, jds,jde, kds,kde, &
>                   ims,ime, jms,jme, kms,kme,                             &
>                   its,ite, jts,jte, kts,kte                              )
>           else
>              call wrf_error_fatal("ERROR: wet scavaging option requires mp_phys = CAMMGMP SCHEME to function.")
>           endif
>        endif
>      CASE (CBMZ_MOSAIC_4BIN, CBMZ_MOSAIC_KPP, CBMZ_MOSAIC_8BIN, CBMZ_MOSAIC_4BIN_AQ, CBMZ_MOSAIC_8BIN_AQ, &
>            CBMZ_MOSAIC_DMS_4BIN, CBMZ_MOSAIC_DMS_8BIN, CBMZ_MOSAIC_DMS_4BIN_AQ, CBMZ_MOSAIC_DMS_8BIN_AQ, &
>            CBMZ_MOSAIC_4BIN_VBS2_KPP,SAPRC99_MOSAIC_4BIN_VBS2_KPP,MOZART_MOSAIC_4BIN_VBS0_KPP,CRI_MOSAIC_8BIN_AQ_KPP, CRI_MOSAIC_4BIN_AQ_KPP )
726c1093
<        call init_data_mosaic_asect(is_aerosol)
---
>        call init_data_mosaic_asect(config_flags%n2o5_hetchem,is_aerosol)
740c1107,1109
<    CASE (RADM2SORG_AQ, RACMSORG_AQ, CBMZ_MOSAIC_4BIN_AQ, CBMZ_MOSAIC_8BIN_AQ)
---
>    CASE (RADM2SORG_AQ, RADM2SORG_AQCHEM, RACMSORG_AQ, RACMSORG_AQCHEM_KPP, RACM_ESRLSORG_AQCHEM_KPP, &
>          CBMZ_MOSAIC_4BIN_AQ, CBMZ_MOSAIC_8BIN_AQ, CBMZ_MOSAIC_DMS_4BIN_AQ, &
>          CBMZ_MOSAIC_DMS_8BIN_AQ,CBMZSORG_AQ,CRI_MOSAIC_8BIN_AQ_KPP, CRI_MOSAIC_4BIN_AQ_KPP)
752a1122,1123
>         ch_dust(:,:)=0.8D-9
>         ch_ss(:,:)=1.
760c1131,1132
<        call dep_init( id, config_flags, numgas, &
---
> 
>         call dep_init( id, config_flags, numgas, mminlu_loc, &
761a1134
> !--
768,769c1141,1144
<      CASE (CBMZ, CBMZ_BB, CBMZ_BB_KPP, CBMZ_MOSAIC_4BIN, CBMZ_MOSAIC_8BIN, &
<            CBMZ_MOSAIC_4BIN_AQ, CBMZ_MOSAIC_8BIN_AQ)
---
>      CASE (CBMZ, CBMZ_BB, CBMZ_BB_KPP,CBMZ_MOSAIC_KPP,  CBMZ_MOSAIC_4BIN, &
>            CBMZ_MOSAIC_8BIN, CBMZ_MOSAIC_4BIN_AQ, CBMZ_MOSAIC_8BIN_AQ, CBMZSORG,CBMZSORG_AQ, &
>            CBMZ_MOSAIC_DMS_4BIN, CBMZ_MOSAIC_DMS_8BIN, CBMZ_MOSAIC_DMS_4BIN_AQ, & 
>            CBMZ_MOSAIC_DMS_8BIN_AQ, CBMZ_CAM_MAM3_NOAQ, CBMZ_CAM_MAM3_AQ, CBMZ_CAM_MAM7_NOAQ, CBMZ_CAM_MAM7_AQ )
831a1207,1222
> ! 
> !-- initialization upper bounary and tropopause modules
> !
>     if( config_flags%have_bcs_upper ) then
>         CALL wrf_debug(00,'call upper boundary initialization')
>         call upper_bc_init( id, xlat, dt, config_flags,  &
>                             ids,ide, jds,jde, kds,kde,   &
>                             ims,ime, jms,jme, kms,kme,   &
>                             its,ite, jts,jte, kts,kte    )
> 
>         call tropopause_init( id, xlat, xlong, config_flags, &
>                             ids,ide, jds,jde, kds,kde,       &
>                             ims,ime, jms,jme, kms,kme,       &
>                             its,ite, jts,jte, kts,kte        )
>     end if
>     gas_pcnst_modal_aero_pos = max(1,gas_pcnst_modal_aero) !BSINGH - Fix for non-MAM simulations
833a1225,1308
> !---------------------------------------------------------------------------------------------
> !Subroutine initializes VPRM parameters based on namelist option for "vprm_opt"
> !
> SUBROUTINE VPRM_par_initialize(rad_vprm,lambda_vprm,alpha_vprm,resp_vprm,config_flags)
> 
> USE module_configure,only:  grid_config_rec_type
> 
> ! VPRM parameters initialization section
> IMPLICIT NONE
> 
> REAL, DIMENSION(8), INTENT(OUT) ::  rad_vprm, lambda_vprm, alpha_vprm, resp_vprm
> REAL, DIMENSION(8,4)    ::  vprm_table_us, vprm_table_europe, vprm_table_tropics, vprm_par
> 
> DATA vprm_table_us &
>      / 261.0, 324.0, 206.0, 363.0, 682.0, 757.0, 157.0, 0.0, &
>       -0.2492, -0.1729, -0.2555, -0.08736, -0.1141, -0.15330, -0.13335, 0.00000, &
>        0.3301, 0.3258, 0.3422, 0.0239, 0.0049, 0.2680, 0.0269, 0.0000, &
>        0., 0., 0., 0., 0., 0., 0., 0. /
> 
> DATA vprm_table_europe &
>      / 270.2, 271.4, 236.6, 363.0, 682.0, 690.3, 229.1, 0.0, &
>       -0.3084, -0.1955, -0.2856, -0.0874, -0.1141, -0.1350, -0.1748, 0.0000, &
>        0.1797, 0.1495, 0.2258, 0.0239, 0.0049, 0.1699, 0.0881, 0.0000, &
>        0.8800, 0.8233, 0.4321, 0.0000, 0.0000, -0.0144, 0.5843, 0.0000 /
> 
> ! Tropics are still preliminary, too strong SWDOWN might cause too high uptake
> DATA vprm_table_tropics &
>      / 501.0, 324.0, 206.0, 303.0, 682.0, 646.0, 157.0, 0.0, &
>       -0.2101, -0.1729, -0.2555, -0.0874, -0.1141, -0.1209, -0.1334, 0.0000, &
>        0.1601, 0.3258, 0.3422, 0.0239, 0.0049, 0.0043, 0.0269, 0.0000, &
>        0., 0., 0., 0., 0., 0., 0., 0. /
> 
> TYPE (grid_config_rec_type) , INTENT (IN) :: config_flags
> 
> sel_pars: SELECT CASE(config_flags%vprm_opt)
> CASE ('VPRM_table_US')
>   vprm_par=vprm_table_us
> CASE ('VPRM_table_EUROPE')
>   vprm_par=vprm_table_europe
> CASE ('VPRM_table_TROPICS')
>   vprm_par=vprm_table_tropics
> CASE DEFAULT
>   CALL wrf_message("check vprm_opt in namelist.input")
>   CALL wrf_error_fatal ( "NO PARAMETER TABLE IS INCLUDED FOR THIS VPRM TABLE OPTION!")
> END SELECT sel_pars
> 
> rad_vprm=     vprm_par(1:8,1)
> lambda_vprm=  vprm_par(1:8,2)
> alpha_vprm=   vprm_par(1:8,3)
> resp_vprm=    vprm_par(1:8,4)
> 
> END SUBROUTINE VPRM_par_initialize
> !******************************************************************************
> !
> SUBROUTINE termite_initialize( biom,emch4,config_flags)
> !Subroutine initializes the termite emission parameters provided by Sanderson et al. 1996
> ! parameters for termite emission initialization
> 
> USE module_configure,only:  grid_config_rec_type
> 
> IMPLICIT NONE
> 
> REAL, DIMENSION(14,3)   ::  term_em
> REAL, DIMENSION(14)     ::  biom, emch4
> 
> DATA term_em &
>       /11.0, 8.0,  11.26, 3.0,  0.96, 10.6,  5.2,  0.98, 8.43, 5.38, 2.25, 5.3, 2.7,  5.3,  &
>        5.64, 5.64, 5.64, 1.77, 2.9, 3.2, 1.77, 2.9, 3.2, 3.0, 3.0, 4.13, 4.13, 4.13, &
>        6.16, 6.16, 6.16, 1.77, 7.60,  7.00, 1.77, 7.60, 7.0, 3.9, 3.9, 4.13,  4.13,  4.13/
> 
> TYPE (grid_config_rec_type) , INTENT (IN) :: config_flags
> 
> sel_pars: SELECT CASE(config_flags%term_opt)
>  CASE ('CH4_termite_NW')
>    biom= term_em(1:14,1)
>    emch4 = term_em(1:14,2)
>  CASE ('CH4_termite_OW')
>    biom= term_em(1:14,1)
>    emch4 = term_em(1:14,3)
>  CASE DEFAULT
>    CALL wrf_error_fatal ( "NO PARAMETER TABLE IS INCLUDED FOR THIS TERMITE CH4 OPTION!")
> END SELECT sel_pars
> 
> END SUBROUTINE termite_initialize
834a1310
> !
840,841d1315
<   CHARACTER(len=256)   ::   mesg
< 
849c1323
<   case (RADM2, RADM2SORG, RADM2SORG_AQ, RADM2_KPP, RADM2SORG_KPP, GOCARTRADM2,GOCARTRADM2_KPP)
---
>   case (RADM2, RADM2SORG, RADM2SORG_AQ, RADM2SORG_AQCHEM, RADM2_KPP, RADM2SORG_KPP, GOCARTRADM2,GOCARTRADM2_KPP)
891c1365,1366
<   case (RACMSORG_AQ, RACM_KPP, RACMPM_KPP, RACMSORG_KPP,RACM_ESRLSORG_KPP)
---
>   case (RACMSORG_AQ, RACMSORG_AQCHEM_KPP, RACM_ESRLSORG_AQCHEM_KPP, RACM_KPP, RACMPM_KPP, RACMSORG_KPP, R2SMH_KPP, &
>         RACM_ESRLSORG_KPP,RACM_SOA_VBS_KPP)
921c1396
<      print*,p_tpan,"tpan"
---
> !Azimeh     print*,p_tpan,"tpan"
928a1404
>      print*,p_honit,"honit"
933c1409
<      print*,p_udd,"udd"
---
>      print*,p_udd,"udd"  !Azimeh
938a1415,1436
> !Azimeh night isoprene chemistry
>       print*,p_isn1,"isn1"
>       print*,p_isnooa,"isnooa"
>       print*,p_isnoob,"isnoob"
>       print*,p_isnohoo,"isnohoo"
>       print*,p_propnnb,"propnnb"
>       print*,p_inpn,"inpn"
> !Azimeh
>      print*,p_acd,"acd"
>      print*,p_ace,"ace"
>      print*,p_act,"act"
>      print*,p_bald,"bald"
>      print*,p_ben,"ben"
>      print*,p_eoh,"eoh"
>      print*,p_ishp,"ishp"
>      print*,p_ison,"ison"
>      print*,p_mek,"mek"
>      print*,p_moh,"moh"
>      print*,p_mpan,"mpan"
>      print*,p_mvk,"mvk"
>      print*,p_roh,"roh"
>      print*,p_xyo,"xyo"
941,1020c1439,1440
<   case (R2S_KPP)
<        WRITE(mesg,*) 'in case RACM2SORG_KPP'
<                  CALL wrf_message(mesg)
<      WRITE(mesg,*),p_so2,'so2', p_sulf,'sulf',p_no2,'no2',p_no,'no',p_o3,'o3'
<       CALL wrf_message(mesg)
<      WRITE(mesg,*) p_hno3,'hno3',p_h2o2,'h2o2',p_ald,'ald',p_hcho,'hcho',p_op1,'op1'
<       CALL wrf_message(mesg)
<      WRITE(mesg,*) p_op2,'op2',p_paa,'paa',p_ora1,'ora1',p_ora2,'ora2',p_nh3,'nh3'
<       CALL wrf_message(mesg)
<      WRITE(mesg,*) p_n2o5,'n2o5',p_no3,'no3',p_pan,'pan',p_hc3,'hc3',p_hc5,'hc5'
<       CALL wrf_message(mesg)
<      WRITE(mesg,*) p_hc8,'hc8',p_eth,'eth',p_co,'co',p_ete,'ete',p_olt,'olt'
<       CALL wrf_message(mesg)
<      WRITE(mesg,*) p_oli,'oli',p_tol,'tol',p_xyl,'xyl',p_aco3,'aco3',p_hono,'hono'
<       CALL wrf_message(mesg)
<      WRITE(mesg,*) p_hno4,'hno4',p_ket,'ket',p_gly,'gly',p_mgly,'mgly',p_dcb,'dcb'
<       CALL wrf_message(mesg)
<      WRITE(mesg,*) p_onit,'onit',p_csl,'csl',p_iso,'iso',p_co2,'co2',p_ch4,'ch4'
<       CALL wrf_message(mesg)
<      WRITE(mesg,*) p_hket,'hket',p_api,'api',p_lim,'lim',p_dien,'dien',p_macr,'macr'
<       CALL wrf_message(mesg)
<      WRITE(mesg,*) p_acd,'acd',p_ace,'ace',p_act,'act',p_bald,'bald'
<       CALL wrf_message(mesg)
<      WRITE(mesg,*) p_ben,'ben',p_dcb1,'dcb1',p_dcb2,'dcb2',p_dcb3,'dcb3',p_eoh,'eoh'
<       CALL wrf_message(mesg)
<      WRITE(mesg,*) p_epx,'epx',p_eteg,'eteg',p_ishp,'ishp',p_ison,'ison',p_mahp,'mahp'
<       CALL wrf_message(mesg)
<      WRITE(mesg,*) p_mct,'mct',p_mek,'mek',p_moh,'moh',p_mpan,'mpan',p_mvk,'mvk'
<       CALL wrf_message(mesg)
<      WRITE(mesg,*) p_nald,'nald',p_per1,'per1',p_per2,'per2',p_phen,'phen',p_ppn,'ppn'
<       CALL wrf_message(mesg)
<      WRITE(mesg,*) p_rco3,'rco3',p_roh,'roh',p_uald,'uald',p_xyo,'xyo'
<       CALL wrf_message(mesg)
<      WRITE(mesg,*) p_ho,'ho',p_ho2,'ho2'
<       CALL wrf_message(mesg)
<   case (R2SI_KPP)
<       WRITE(mesg,*) 'in case RACM2SORG_ISO_KPP'
<                  CALL wrf_message(mesg)
<      WRITE(mesg,*),p_so2,'so2', p_sulf,'sulf',p_no2,'no2',p_no,'no',p_o3,'o3'
<       CALL wrf_message(mesg)
<      WRITE(mesg,*) p_hno3,'hno3',p_h2o2,'h2o2',p_ald,'ald',p_hcho,'hcho',p_op1,'op1'
<       CALL wrf_message(mesg)
<      WRITE(mesg,*) p_op2,'op2',p_paa,'paa',p_ora1,'ora1',p_ora2,'ora2',p_nh3,'nh3'
<       CALL wrf_message(mesg)
<      WRITE(mesg,*) p_n2o5,'n2o5',p_no3,'no3',p_pan,'pan',p_hc3,'hc3',p_hc5,'hc5'
<       CALL wrf_message(mesg)
<      WRITE(mesg,*) p_hc8,'hc8',p_eth,'eth',p_co,'co',p_ete,'ete',p_olt,'olt'
<       CALL wrf_message(mesg)
<      WRITE(mesg,*) p_oli,'oli',p_tol,'tol',p_xyl,'xyl',p_aco3,'aco3',p_hono,'hono'
<       CALL wrf_message(mesg)
<      WRITE(mesg,*) p_hno4,'hno4',p_ket,'ket',p_gly,'gly',p_mgly,'mgly',p_dcb,'dcb'
<       CALL wrf_message(mesg)
<      WRITE(mesg,*) p_onit,'onit',p_csl,'csl',p_iso,'iso',p_co2,'co2',p_ch4,'ch4'
<       CALL wrf_message(mesg)
<      WRITE(mesg,*) p_hket,'hket',p_api,'api',p_lim,'lim',p_dien,'dien',p_macr,'macr'
<       CALL wrf_message(mesg)
<      WRITE(mesg,*) p_acd,'acd',p_ace,'ace',p_act,'act',p_bald,'bald'
<       CALL wrf_message(mesg)
<      WRITE(mesg,*) p_ben,'ben',p_dcb1,'dcb1',p_dcb2,'dcb2',p_dcb3,'dcb3',p_eoh,'eoh'
<       CALL wrf_message(mesg)
<      WRITE(mesg,*) p_epx,'epx',p_eteg,'eteg',p_ishp,'ishp',p_ison,'ison',p_mahp,'mahp'
<       CALL wrf_message(mesg)
<      WRITE(mesg,*) p_mct,'mct',p_mek,'mek',p_moh,'moh',p_mpan,'mpan',p_mvk,'mvk'
<       CALL wrf_message(mesg)
<      WRITE(mesg,*) p_nald,'nald',p_per1,'per1',p_per2,'per2',p_phen,'phen',p_ppn,'ppn'
<       CALL wrf_message(mesg)
<      WRITE(mesg,*) p_rco3,'rco3',p_roh,'roh',p_uald,'uald',p_xyo,'xyo'
<       CALL wrf_message(mesg)
<      WRITE(mesg,*) p_ho,'ho',p_ho2,'ho2'
<       CALL wrf_message(mesg)
<      WRITE(mesg,*) p_glyc,'glyc',p_isopnd,'isopnd',p_isopnb,'isopnb',p_uhc,'uhc',p_hac,'hac'
<       CALL wrf_message(mesg)
<      WRITE(mesg,*) p_macrn,'macrn',p_mvkn,'mvkn',p_propnn,'propnn',p_vrp,'vrp'
<       CALL wrf_message(mesg)
<      WRITE(mesg,*) p_iepox,'iepox',p_iap,'iap'
<       CALL wrf_message(mesg)
<      WRITE(mesg,*) p_dhmob,'dhmob',p_moba,'moba',p_ethln,'ethln',p_isnp,'isnp'
<       CALL wrf_message(mesg)
<      WRITE(mesg,*) p_pyac,'pypac',p_monit,'monit',p_donit,'donit',p_aonit,'aonit',p_tonit,'tonit'
<       CALL wrf_message(mesg)
---
> !Azimeh
> !!!!!!!!
1094c1514,1515
<   case (CBMZ_BB, CBMZ_BB_KPP, CBMZ_MOSAIC_4BIN, CBMZ_MOSAIC_8BIN, CBMZ_MOSAIC_4BIN_AQ, CBMZ_MOSAIC_8BIN_AQ)
---
>   case (CBMZ_BB, CBMZ_BB_KPP, CBMZ_MOSAIC_4BIN, CBMZ_MOSAIC_8BIN, CBMZ_MOSAIC_4BIN_AQ, CBMZ_MOSAIC_8BIN_AQ, CBMZSORG,CBMZSORG_AQ, &
>         CBMZ_CAM_MAM3_NOAQ, CBMZ_CAM_MAM3_AQ, CBMZ_CAM_MAM7_NOAQ, CBMZ_CAM_MAM7_AQ)
1156a1578,1744
> 
>   select case (chem_opt)
>   case( CBMZ_CAM_MAM3_NOAQ, CBMZ_CAM_MAM3_AQ, CBMZ_CAM_MAM7_NOAQ, CBMZ_CAM_MAM7_AQ )
>         print*,p_soag,"soag"
>      end select
>   end select
>   
>   case (CBMZ_MOSAIC_KPP, CBMZ_MOSAIC_4BIN_VBS2_KPP)
>     print*,p_so2,"so2"
>      print*,p_sulf,"sulf"
>      print*,p_no2,"no2"
>      print*,p_no,"no"
>      print*,p_o3,"o3"
>      print*,p_hno3,"hno3"
>      print*,p_h2o2,"h2o2"
>      print*,p_ald,"ald"
>      print*,p_hcho,"hcho"
>      print*,p_op1,"op1"
>      print*,p_op2,"op2"
>      print*,p_paa,"paa"
>      print*,p_ora1,"ora1"
>      print*,p_ora2,"ora2"
>      print*,p_nh3,"nh3"
>      print*,p_n2o5,"n2o5"
>      print*,p_no3,"no3"
>      print*,p_pan,"pan"
>      print*,p_hc3,"hc3"
>      print*,p_hc5,"hc5"
>      print*,p_hc8,"hc8"
>      print*,p_eth,"eth"
>      print*,p_ch4,"ch4"
>      print*,p_co,"co"
>      print*,p_ol2,"ol2"
>      print*,p_olt,"olt"
>      print*,p_oli,"oli"
>      print*,p_tol,"tol"
>      print*,p_xyl,"xyl"
>      print*,p_aco3,"aco3"
>      print*,p_tpan,"tpan"
>      print*,p_hono,"hono"
>      print*,p_hno4,"hno4"
>      print*,p_ket,"ket"
>      print*,p_gly,"gly"
>      print*,p_mgly,"mgly"
>      print*,p_dcb,"dcb"
>      print*,p_onit,"onit"
>      print*,p_csl,"csl"
>      print*,p_iso,"iso"
>      print*,p_ho,"ho"
>      print*,p_ho2,"ho2"
>      print*,p_hcl,"hcl"
>      print*,p_ch3o2,"ch3o2"
>      print*,p_ethp,"ethp"
>      print*,p_ch3oh,"ch3oh"
>      print*,p_c2h5oh,"c2h5oh"
>      print*,p_par,"par"
>      print*,p_to2,"to2"
>      print*,p_cro,"cro"
>      print*,p_open,"open"
>      print*,p_op3,"op3"
>      print*,p_c2o3,"c2o3"
>      print*,p_ro2,"ro2"
>      print*,p_ano2,"ano2"
>      print*,p_nap,"nap"
>      print*,p_xo2,"xo2"
>      print*,p_xpar,"xpar"
>      print*,p_isoprd,"isoprd"
>      print*,p_isopp,"isopp"
>      print*,p_isopn,"isopn"
>      print*,p_isopo2,"isopo2"
>      print*,p_aro1,"aro1"
>      print*,p_aro2,"aro2"
>      print*,p_alk1,"alk1"
>      print*,p_ole1,"ole1"
>      print*,p_api1,"api1"
>      print*,p_api2,"api2"
>      print*,p_lim1,"lim1"
>      print*,p_lim2,"lim2"
>      print*,p_api,"api"
>      print*,p_lim,"lim"
> 
>   case (SAPRC99_KPP,SAPRC99_MOSAIC_4BIN_VBS2_KPP)
>      print*,p_o3,"o3"
>      print*,p_h2o2,"h2o2"
>      print*,p_no,"no"
>      print*,p_no2,"no2"
>      print*,p_no3,"no3"
>      print*,p_n2o5,"n2o5"
>      print*,p_hono,"hono"
>      print*,p_hno3,"hno3"
>      print*,p_hno4,"hno4"
>      print*,p_so2,"so2"
>      print*,p_h2so4,"h2so4"
>      print*,p_co,"co"
>      print*,p_hcho,"hcho"
>      print*,p_ccho,"ccho"
>      print*,p_rcho,"rcho"
>      print*,p_acet,"acet"
>      print*,p_mek,"mek"
>      print*,p_hcooh,"hcooh"
>      print*,p_meoh,"meoh"
>      print*,p_etoh,"etoh"
>      print*,p_cco_oh,"cco_oh"
>      print*,p_rco_oh,"rco_oh"
>      print*,p_gly,"gly"
>      print*,p_mgly,"mgly"
>      print*,p_bacl,"bacl"
>      print*,p_cres,"cres"
>      print*,p_bald,"bald"
>      print*,p_isoprod,"isoprod"
>      print*,p_methacro,"methacro"
>      print*,p_mvk,"mvk"
>      print*,p_prod2,"prod2"
>      print*,p_dcb1,"dcb1"
>      print*,p_dcb2,"dcb2"
>      print*,p_dcb3,"dcb3"
>      print*,p_ethene,"ethene"
>      print*,p_isoprene,"isoprene"
>      print*,p_c2h6,"c2h6"
>      print*,p_c3h8,"c3h8"
>      print*,p_c2h2,"c2h2"
>      print*,p_c3h6,"c3h6"
>      print*,p_alk3,"alk3"
>      print*,p_alk4,"alk4"
>      print*,p_alk5,"alk5"
>      print*,p_aro1,"aro1"
>      print*,p_aro2,"aro2"
>      print*,p_ole1,"ole1"
>      print*,p_ole2,"ole2"
>      print*,p_terp,"terp"
>      print*,p_sesq,"sesq"
>      print*,p_rno3,"rno3"
>      print*,p_nphe,"nphe"
>      print*,p_phen,"phen"
>      print*,p_pan,"pan"
>      print*,p_pan2,"pan2"
>      print*,p_pbzn,"pbzn"
>      print*,p_ma_pan,"ma_pan"
>      print*,p_bc_spr,"bc_spr"
>      print*,p_oc_spr,"oc_spr"
>      print*,p_ssf,"ssf"
>      print*,p_ssc,"ssc"
>      print*,p_pm10_spr,"pm10_spr"
>      print*,p_pm25_spr,"pm25_spr"
>      print*,p_dms,"dms"
>      print*,p_dst1,"dst1"
>      print*,p_dst2,"dst2"
>      print*,p_dst3,"dst3"
>      print*,p_co2,"co2"
>      print*,p_cco_ooh,"cco_ooh"
>      print*,p_rco_o2,"rco_o2"
>      print*,p_rco_ooh,"rco_ooh"
>      print*,p_xn,"xn"
>      print*,p_xc,"xc"
>      print*,p_ho,"oh"
>      print*,p_ho2,"ho2"
>      print*,p_c_o2,"c_o2"
>      print*,p_cooh,"cooh"
>      print*,p_rooh,"rooh"
>      print*,p_ro2_r,"ro2_r"
>      print*,p_r2o2,"r2o2"
>      print*,p_ro2_n,"ro2_n"
>      print*,p_cco_o2,"cco_o2"
>      print*,p_bzco_o2,"bzco_o2"
>      print*,p_ma_rco3,"ma_rco3"
>      print*,p_ch4,"ch4"
> 
1162,1163c1750,1751
<   case (RADM2SORG, RADM2SORG_AQ, RADM2SORG_KPP, RACMSORG_KPP, RACMSORG_AQ, &
<         RACM_ESRLSORG_KPP, R2S_KPP,R2SI_KPP,R2SMH_KPP,R2SMN_KPP)
---
>   case (RADM2SORG, RADM2SORG_AQ, RADM2SORG_AQCHEM, RADM2SORG_KPP, RACMSORG_AQ, RACMSORG_AQCHEM_KPP, &
>         RACM_ESRLSORG_AQCHEM_KPP, RACMSORG_KPP, R2SMH_KPP, RACM_ESRLSORG_KPP, CBMZSORG, CBMZSORG_AQ,RACMSORG)
1242a1831,1874
>   case (MOZART_MOSAIC_4BIN_VBS0_KPP )
>      print*,p_no3_a01,"no3_a01"
>      print*,p_cl_a01,"cl_a01"
>      print*,p_nh4_a01,"nh4_a01"
>      print*,p_na_a01,"na_a01"
>      print*,p_oin_a01,"oin_a01"
>      print*,p_oc_a01,"oc_a01"
>      print*,p_bc_a01,"bc_a01"
>      print*,p_hysw_a01,"hysw_a01"
>      print*,p_water_a01,"water_a01"
>      print*,p_num_a01,"num_a01"
>      print*,p_so4_a02,"so4_a02"
>      print*,p_no3_a02,"no3_a02"
>      print*,p_cl_a02,"cl_a02"
>      print*,p_nh4_a02,"nh4_a02"
>      print*,p_na_a02,"na_a02"
>      print*,p_oin_a02,"oin_a02"
>      print*,p_oc_a02,"oc_a02"
>      print*,p_bc_a02,"bc_a02"
>      print*,p_hysw_a02,"hysw_a02"
>      print*,p_water_a02,"water_a02"
>      print*,p_num_a02,"num_a02"
>      print*,p_so4_a03,"so4_a03"
>      print*,p_no3_a03,"no3_a03"
>      print*,p_cl_a03,"cl_a03"
>      print*,p_nh4_a03,"nh4_a03"
>      print*,p_na_a03,"na_a03"
>      print*,p_oin_a03,"oin_a03"
>      print*,p_oc_a03,"oc_a03"
>      print*,p_bc_a03,"bc_a03"
>      print*,p_hysw_a03,"hysw_a03"
>      print*,p_water_a03,"water_a03"
>      print*,p_num_a03,"num_a03"
>      print*,p_so4_a04,"so4_a04"
>      print*,p_no3_a04,"no3_a04"
>      print*,p_cl_a04,"cl_a04"
>      print*,p_nh4_a04,"nh4_a04"
>      print*,p_na_a04,"na_a04"
>      print*,p_oin_a04,"oin_a04"
>      print*,p_oc_a04,"oc_a04"
>      print*,p_bc_a04,"bc_a04"
>      print*,p_hysw_a04,"hysw_a04"
>      print*,p_water_a04,"water_a04"
>      print*,p_num_a04,"num_a04"
1331a1964,2133
>   case (CBMZ_MOSAIC_KPP)
>      print*,p_so4_a01,"so4_a01"
>      print*,p_no3_a01,"no3_a01"
>      print*,p_cl_a01,"cl_a01"
>      print*,p_nh4_a01,"nh4_a01"
>      print*,p_na_a01,"na_a01"
>      print*,p_oin_a01,"oin_a01"
>      print*,p_oc_a01,"oc_a01"
>      print*,p_bc_a01,"bc_a01"
>      print*,p_hysw_a01,"hysw_a01"
>      print*,p_water_a01,"water_a01"
>      print*,p_num_a01,"num_a01"
>      print*,p_aro1_a01,"aro1_a01"
>      print*,p_aro2_a01,"aro2_a01"
>      print*,p_alk1_a01,"alk1_a01"
>      print*,p_ole1_a01,"ole1_a01"
>      print*,p_api1_a01,"api1_a01"
>      print*,p_api2_a01,"api2_a01"
>      print*,p_lim1_a01,"lim1_a01"
>      print*,p_lim2_a01,"lim2_a01"
>      print*,p_so4_a02,"so4_a02"
>      print*,p_no3_a02,"no3_a02"
>      print*,p_cl_a02,"cl_a02"
>      print*,p_nh4_a02,"nh4_a02"
>      print*,p_na_a02,"na_a02"
>      print*,p_oin_a02,"oin_a02"
>      print*,p_oc_a02,"oc_a02"
>      print*,p_bc_a02,"bc_a02"
>      print*,p_hysw_a02,"hysw_a02"
>      print*,p_water_a02,"water_a02"
>      print*,p_num_a02,"num_a02"
>      print*,p_aro1_a02,"aro1_a02"
>      print*,p_aro2_a02,"aro2_a02"
>      print*,p_alk1_a02,"alk1_a02"
>      print*,p_ole1_a02,"ole1_a02"
>      print*,p_api1_a02,"api1_a02"
>      print*,p_api2_a02,"api2_a02"
>      print*,p_lim1_a02,"lim1_a02"
>      print*,p_lim2_a02,"lim2_a02"
>      print*,p_so4_a03,"so4_a03"
>      print*,p_no3_a03,"no3_a03"
>      print*,p_cl_a03,"cl_a03"
>      print*,p_nh4_a03,"nh4_a03"
>      print*,p_na_a03,"na_a03"
>      print*,p_oin_a03,"oin_a03"
>      print*,p_oc_a03,"oc_a03"
>      print*,p_bc_a03,"bc_a03"
>      print*,p_hysw_a03,"hysw_a03"
>      print*,p_water_a03,"water_a03"
>      print*,p_num_a03,"num_a03"
>      print*,p_aro1_a03,"aro1_a03"
>      print*,p_aro2_a03,"aro2_a03"
>      print*,p_alk1_a03,"alk1_a03"
>      print*,p_ole1_a03,"ole1_a03"
>      print*,p_api1_a03,"api1_a03"
>      print*,p_api2_a03,"api2_a03"
>      print*,p_lim1_a03,"lim1_a03"
>      print*,p_lim2_a03,"lim2_a03"
>      print*,p_so4_a04,"so4_a04"
>      print*,p_no3_a04,"no3_a04"
>      print*,p_cl_a04,"cl_a04"
>      print*,p_nh4_a04,"nh4_a04"
>      print*,p_na_a04,"na_a04"
>      print*,p_oin_a04,"oin_a04"
>      print*,p_oc_a04,"oc_a04"
>      print*,p_bc_a04,"bc_a04"
>      print*,p_hysw_a04,"hysw_a04"
>      print*,p_water_a04,"water_a04"
>      print*,p_num_a04,"num_a04"
>      print*,p_aro1_a04,"aro1_a04"
>      print*,p_aro2_a04,"aro2_a04"
>      print*,p_alk1_a04,"alk1_a04"
>      print*,p_ole1_a04,"ole1_a04"
>      print*,p_api1_a04,"api1_a04"
>      print*,p_api2_a04,"api2_a04"
>      print*,p_lim1_a04,"lim1_a04"
>      print*,p_lim2_a04,"lim2_a04"
>      print*,p_so4_a05,"so4_a05"
>      print*,p_no3_a05,"no3_a05"
>      print*,p_cl_a05,"cl_a05"
>      print*,p_nh4_a05,"nh4_a05"
>      print*,p_na_a05,"na_a05"
>      print*,p_oin_a05,"oin_a05"
>      print*,p_oc_a05,"oc_a05"
>      print*,p_bc_a05,"bc_a05"
>      print*,p_hysw_a05,"hysw_a05"
>      print*,p_water_a05,"water_a05"
>      print*,p_num_a05,"num_a05"
>      print*,p_aro1_a05,"aro1_a05"
>      print*,p_aro2_a05,"aro2_a05"
>      print*,p_alk1_a05,"alk1_a05"
>      print*,p_ole1_a05,"ole1_a05"
>      print*,p_api1_a05,"api1_a05"
>      print*,p_api2_a05,"api2_a05"
>      print*,p_lim1_a05,"lim1_a05"
>      print*,p_lim2_a05,"lim2_a05"
>      print*,p_so4_a06,"so4_a06"
>      print*,p_no3_a06,"no3_a06"
>      print*,p_cl_a06,"cl_a06"
>      print*,p_nh4_a06,"nh4_a06"
>      print*,p_na_a06,"na_a06"
>      print*,p_oin_a06,"oin_a06"
>      print*,p_oc_a06,"oc_a06"
>      print*,p_bc_a06,"bc_a06"
>      print*,p_hysw_a06,"hysw_a06"
>      print*,p_water_a06,"water_a06"
>      print*,p_num_a06,"num_a06"
>      print*,p_aro1_a06,"aro1_a06"
>      print*,p_aro2_a06,"aro2_a06"
>      print*,p_alk1_a06,"alk1_a06"
>      print*,p_ole1_a06,"ole1_a06"
>      print*,p_api1_a06,"api1_a06"
>      print*,p_api2_a06,"api2_a06"
>      print*,p_lim1_a06,"lim1_a06"
>      print*,p_lim2_a06,"lim2_a06"
>      print*,p_so4_a07,"so4_a07"
>      print*,p_no3_a07,"no3_a07"
>      print*,p_cl_a07,"cl_a07"
>      print*,p_nh4_a07,"nh4_a07"
>      print*,p_na_a07,"na_a07"
>      print*,p_oin_a07,"oin_a07"
>      print*,p_oc_a07,"oc_a07"
>      print*,p_bc_a07,"bc_a07"
>      print*,p_hysw_a07,"hysw_a07"
>      print*,p_water_a07,"water_a07"
>      print*,p_num_a07,"num_a07"
>      print*,p_aro1_a07,"aro1_a07"
>      print*,p_aro2_a07,"aro2_a07"
>      print*,p_alk1_a07,"alk1_a07"
>      print*,p_ole1_a07,"ole1_a07"
>      print*,p_api1_a07,"api1_a07"
>      print*,p_api2_a07,"api2_a07"
>      print*,p_lim1_a07,"lim1_a07"
>      print*,p_lim2_a07,"lim2_a07"
>      print*,p_so4_a08,"so4_a08"
>      print*,p_no3_a08,"no3_a08"
>      print*,p_cl_a08,"cl_a08"
>      print*,p_nh4_a08,"nh4_a08"
>      print*,p_na_a08,"na_a08"
>      print*,p_oin_a08,"oin_a08"
>      print*,p_oc_a08,"oc_a08"
>      print*,p_bc_a08,"bc_a08"
>      print*,p_hysw_a08,"hysw_a08"
>      print*,p_water_a08,"water_a08"
>      print*,p_num_a08,"num_a08"
>      print*,p_aro1_a08,"aro1_a08"
>      print*,p_aro2_a08,"aro2_a08"
>      print*,p_alk1_a08,"alk1_a08"
>      print*,p_ole1_a08,"ole1_a08"
>      print*,p_api1_a08,"api1_a08"
>      print*,p_api2_a08,"api2_a08"
>      print*,p_lim1_a08,"lim1_a08"
>      print*,p_lim2_a08,"lim2_a08"
>      print*,p_ca_a01,"ca_a01"
>      print*,p_ca_a02,"ca_a02"
>      print*,p_ca_a03,"ca_a03"
>      print*,p_ca_a04,"ca_a04"
>      print*,p_ca_a05,"ca_a05"
>      print*,p_ca_a06,"ca_a06"
>      print*,p_ca_a07,"ca_a07"
>      print*,p_ca_a08,"ca_a08"
>      print*,p_co3_a01,"co3_a01"
>      print*,p_co3_a02,"co3_a02"
>      print*,p_co3_a03,"co3_a03"
>      print*,p_co3_a04,"co3_a04"
>      print*,p_co3_a05,"co3_a05"
>      print*,p_co3_a06,"co3_a06"
>      print*,p_co3_a07,"co3_a07"
>      print*,p_co3_a08,"co3_a08"
> 
1575a2378,2524
> 
>   case ( CBMZ_CAM_MAM3_NOAQ, CBMZ_CAM_MAM3_AQ )
>      print*,p_so4_a1,"so4_a1"
>      print*,p_pom_a1,"pom_a1"
>      print*,p_soa_a1,"soa_a1"
>      print*,p_bc_a1, "bc_a1"
>      print*,p_dst_a1,"dst_a1"
>      print*,p_ncl_a1,"ncl_a1"
>      print*,p_wtr_a1,"wtr_a1"
>      print*,p_num_a1,"num_a1"
>      print*,p_so4_a2,"so4_a2"
>      print*,p_soa_a1,"soa_a2"
>      print*,p_wtr_a1,"wtr_a2"
>      print*,p_num_a2,"num_a2"
>      print*,p_dst_a3,"dst_a3"
>      print*,p_ncl_a3,"ncl_a3"
>      print*,p_so4_a3,"so4_a3"
>      print*,p_wtr_a1,"wtr_a3"
>      print*,p_num_a3,"num_a3"
> 
>   case ( CBMZ_CAM_MAM3_AQ )
>      print*,p_so4_c1,"so4_c1"
>      print*,p_pom_c1,"pom_c1"
>      print*,p_soa_c1,"soa_c1"
>      print*,p_bc_c1, "bc_c1"
>      print*,p_dst_c1,"dst_c1"
>      print*,p_ncl_c1,"ncl_c1"
>      print*,p_num_c1,"num_c1"
>      print*,p_so4_c2,"so4_c2"
>      print*,p_soa_c1,"soa_c2"
>      print*,p_num_c2,"num_c2"
>      print*,p_dst_c3,"dst_c3"
>      print*,p_ncl_c3,"ncl_c3"
>      print*,p_so4_c3,"so4_c3"
>      print*,p_num_c3,"num_c3"
> 
>   case ( CBMZ_CAM_MAM7_NOAQ, CBMZ_CAM_MAM7_AQ )
>      print*,p_so4_a1,"so4_a1"
>      print*,p_nh4_a1,"nh4_a1"
>      print*,p_pom_a1,"pom_a1"
>      print*,p_soa_a1,"soa_a1"
>      print*,p_bc_a1, "bc_a1"
>      print*,p_ncl_a1,"ncl_a1"
>      print*,p_wtr_a1,"wtr_a1"
>      print*,p_num_a1,"num_a1"
>      print*,p_so4_a2,"so4_a2"
>      print*,p_nh4_a2,"nh4_a2"
>      print*,p_soa_a2,"soa_a2"
>      print*,p_ncl_a2,"ncl_a2"
>      print*,p_wtr_a2,"wtr_a2"
>      print*,p_num_a2,"num_a2"
>      print*,p_pom_a3,"pom_a3"
>      print*,p_bc_a3, "bc_a3"
>      print*,p_wtr_a3,"wtr_a3"
>      print*,p_num_a3,"num_a3"
>      print*,p_ncl_a4,"ncl_a4"
>      print*,p_so4_a4,"so4_a4"
>      print*,p_nh4_a4,"nh4_a4"
>      print*,p_wtr_a4,"wtr_a4"
>      print*,p_num_a4,"num_a4"
>      print*,p_dst_a5,"dst_a5"
>      print*,p_so4_a5,"so4_a5"
>      print*,p_nh4_a5,"nh4_a5"
>      print*,p_wtr_a5,"wtr_a5"
>      print*,p_num_a5,"num_a5"
>      print*,p_ncl_a6,"ncl_a6"
>      print*,p_so4_a6,"so4_a6"
>      print*,p_nh4_a6,"nh4_a6"
>      print*,p_wtr_a6,"wtr_a6"
>      print*,p_num_a6,"num_a6"
>      print*,p_dst_a7,"dst_a7"
>      print*,p_so4_a7,"so4_a7"
>      print*,p_nh4_a7,"nh4_a7"
>      print*,p_wtr_a7,"wtr_a7"
>      print*,p_num_a7,"num_a7"
> 
>   case ( CBMZ_CAM_MAM7_AQ )
>      print*,p_so4_c1,"so4_c1"
>      print*,p_nh4_c1,"nh4_c1"
>      print*,p_pom_c1,"pom_c1"
>      print*,p_soa_c1,"soa_c1"
>      print*,p_bc_c1, "bc_c1"
>      print*,p_ncl_c1,"ncl_c1"
>      print*,p_num_c1,"num_c1"
>      print*,p_so4_c2,"so4_c2"
>      print*,p_nh4_c2,"nh4_c2"
>      print*,p_soa_c2,"soa_c2"
>      print*,p_ncl_c2,"ncl_c2"
>      print*,p_num_c2,"num_c2"
>      print*,p_pom_c3,"pom_c3"
>      print*,p_bc_c3, "bc_c3"
>      print*,p_num_c3,"num_c3"
>      print*,p_ncl_c4,"ncl_c4"
>      print*,p_so4_c4,"so4_c4"
>      print*,p_nh4_c4,"nh4_c4"
>      print*,p_num_c4,"num_c4"
>      print*,p_dst_c5,"dst_c5"
>      print*,p_so4_c5,"so4_c5"
>      print*,p_nh4_c5,"nh4_c5"
>      print*,p_num_c5,"num_c5"
>      print*,p_ncl_c6,"ncl_c6"
>      print*,p_so4_c6,"so4_c6"
>      print*,p_nh4_c6,"nh4_c6"
>      print*,p_num_c6,"num_c6"
>      print*,p_dst_c7,"dst_c7"
>      print*,p_so4_c7,"so4_c7"
>      print*,p_nh4_c7,"nh4_c7"
>      print*,p_num_c7,"num_c7"
> 
>   case (RACM_SOA_VBS_KPP)
>      print*,p_so4aj,"so4aj"
>      print*,p_so4ai,"so4ai"
>      print*,p_nh4aj,"nh4aj"
>      print*,p_nh4ai,"nh4ai"
>      print*,p_no3aj,"no3aj"
>      print*,p_no3ai,"no3ai"
> 
>      print*,p_asoa1j,"asoa1j"
>      print*,p_asoa1i,"asoa1i"
>      print*,p_asoa2j,"asoa2j"
>      print*,p_asoa2i,"asoa2i"
>      print*,p_asoa3j,"asoa3j"
>      print*,p_asoa3i,"asoa3i"
>      print*,p_asoa4j,"asoa4j"
>      print*,p_asoa4i,"asoa4i"
> 
>      print*,p_bsoa1j,"bsoa1j"
>      print*,p_bsoa1i,"bsoa1i"
>      print*,p_bsoa2j,"bsoa2j"
>      print*,p_bsoa2i,"bsoa2i"
>      print*,p_bsoa3j,"bsoa3j"
>      print*,p_bsoa3i,"bsoa3i"
>      print*,p_bsoa4j,"bsoa4j"
>      print*,p_bsoa4i,"bsoa4i"
> 
>      print*,p_orgpaj,"orgpaj"
>      print*,p_orgpai,"orgpai"
>      print*,p_ecj,"ecj"
>      print*,p_eci,"eci"
>      print*,p_p25j,"p25j"
>      print*,p_p25i,"p25i"
>      print*,p_antha,"antha"
>      print*,p_seas,"seas"
>      print*,p_soila,"soila"
>      print*,p_nu0,"nu0"
>      print*,p_ac0,"ac0"
>      print*,p_corn,"corn"
